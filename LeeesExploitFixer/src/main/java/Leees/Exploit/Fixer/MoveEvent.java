package Leees.Exploit.Fixer;

import net.minecraft.server.v1_12_R1.MinecraftServer;
import org.bukkit.*;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerMoveEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.PlayerInventory;

public class MoveEvent implements Listener {

    @EventHandler
    public void onMove(PlayerMoveEvent event) {
        Player player = event.getPlayer();
        if (player.getWorld().getEnvironment() == World.Environment.NETHER && player.getLocation().getBlockY() > Main.getPlugin().getConfig().getInt("Nether.Top-Layer") && !player.isOp()) {
            player.sendMessage(ChatColor.translateAlternateColorCodes('&', Main.getPlugin().getConfig().getString("Nether.Top-message")));
            if (Main.getPlugin().getConfig().getString("Nether.top/bottom-do-damage").equalsIgnoreCase("true")) {
                player.setHealth(0);
            }
        }

        if (player.getWorld().getEnvironment() == World.Environment.NETHER && player.getLocation().getBlockY() < Main.getPlugin().getConfig().getInt("Nether.Bottom-Layer") && !player.isOp()) {
            player.sendMessage(ChatColor.translateAlternateColorCodes('&', Main.getPlugin().getConfig().getString("Nether.Bottom-message")));
            if (Main.getPlugin().getConfig().getString("Nether.top/bottom-do-damage").equalsIgnoreCase("true")) {
                player.setHealth(0);
            }
        }

        if (player.isFlying() && !player.isOp() && MinecraftServer.getServer().recentTps[0] <= 15) {
            player.setAllowFlight(false);
            event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "&1-------------------"));
            event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "&6Flying is disabled"));
            event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "&6due to low tps :("));
            event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "&1-------------------"));
            event.setCancelled(true);
        }

        if (player.isFlying() && MinecraftServer.getServer().recentTps[0] <= 17) {
            event.getPlayer().sendActionBar(ChatColor.translateAlternateColorCodes('&', "&6&lWarning low TPS: &c&l" + TPS.getTps()));
        }
        PlayerInventory i = player.getInventory();
        if ((i.getChestplate() != null) && i.getChestplate().getType().equals(Material.ELYTRA) && MinecraftServer.getServer().recentTps[0] <= 17) {
            event.getPlayer().sendActionBar(ChatColor.translateAlternateColorCodes('&', "&6&lWarning low TPS: &c&l" + TPS.getTps()));
        }
        if ((i.getChestplate() != null) && i.getChestplate().getType().equals(Material.ELYTRA) && MinecraftServer.getServer().recentTps[0] <= 15) {
            ItemStack elytra = i.getChestplate();
            i.setChestplate(null);

            // inventory full?
            if (i.firstEmpty() != -1) {
                i.addItem(elytra);
            } else {
                Location l = i.getLocation();
                l.getWorld().dropItemNaturally(l, elytra);
                player.updateInventory();
            }
            event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "&1-------------------"));
            event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "&6Elytras are disabled"));
            event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "&6due to low tps :("));
            event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "&1-------------------"));
            event.setCancelled(true);

        }
    }
}